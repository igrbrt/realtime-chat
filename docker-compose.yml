version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run start
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    networks:
      - react-compose-network
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    command: npm run start:dev
    ports:
      - "3001:3001"
    networks:
      - mongo-compose-network
      - react-compose-network
    depends_on:
      - mongodb

  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    ports:
      - "8081:8081"
    links:
      - mongodb
    networks:
      - mongo-compose-network

  mongodb:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_DATABASE: chat
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      - mongo-compose-network

networks:
  mongo-compose-network:
    driver: bridge
  react-compose-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
